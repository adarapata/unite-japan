MEVIUS FFの開発事例
↑正しくはMOBIUSらしいので名前変わるらしい
スクエニ
Readプログラマー浜口直樹さん

MOBIUS FinalFantasyとは？
FF 7,8,9,10,12,13 のスタッフが携わってる

PVだーーーー

1.大規模開発でUnityを使う時の心得
2.モバイル端末でHDクオリティのゲーム制作をするための心得

そもそも
小規模と大規模の根本的違いは？
同じファイルを同時に触る人が増える

1アニメーション内でもセクションごとにいじる人が増える
- モーション終了後のエンジニアが
- プランナーが当たり判定を
- サウンドエンジニアが音声トリガーを
- エフェクト担当がエフェクト貼り付けを

*.sceneとか*.prefabは同時に複数の人が触るの難しい

どうやったか？
ヒエラルキーで依存関係を作らない
Inspectorから他のprefabを参照させる

コミットを検知してHookする
コミットフックサーバが親のプレファブを最新状態に更新する

上記方法だと依存が綺麗だけど、ヒエラルキービューだと見えない
よし、ツールを作ろう！
Inspector上での依存関係を視認できるツールを作った

開発環境の話
.fbx -> .prefabにする (わかる)
揺れもの系の.bytes -> .prefab
サウンドも .bytes
そしてエクセルファイルも使う
-> xlsファイルを.assetに吐き出した上で、専用classも生成する
エフェクトはFX Maker
GUIはNGUIだった

データ確認フロー
プロジェクトをコミットする
プロジェクト -> バージョン管理 <-> Hookサーバ
                        |
実機<-ゲームサーバ<-アセットバンドルビルドサーバ

2モバイルでの心得
Unity遅いって言われてるけど実際どうなの
UnityというかC#だよね
1 structはスタックだがclassはヒープなのでgcが多い
2 toString() は遅い
3 foreachはEnumrableがヒープ確保される
4 Vector演算が遅い・・。

局所的にネイティヴ使うのがいいんじゃないかな

敵を知るところから
iOSよりAndroidのがメモリが大きく、使える量がでかいため性能が出やすい
AndroidはjavaなんでGCが発生する
iOSはMonoなんでそれはそれでGC発生する

先にAndroid出した方が失敗しないんじゃないかな
iOSよりAndroidのがビルド早いし作業もしやすい

ダウンロードサイズに気をつけろ
FFXV 体験版 5GB
LRFF 製品10GB

MoviusはiOS 70MB Android 40MB
初回起動時のDLサイズ iOS 350MB Android 500MB
高画質設定ならその二倍

テクスチャ形式でサイズ変わる
不透明テクスチャ iOS RGB PVRTC 4bit Android RGB ETC 4bit
半透明テクスチャ iOS RGBA PVRTC 4bit Android RGBA ETC2 8bit

それぞれのGPUに最適なものを選ぶ
SystemInfo.deviceModel でデバイスは取得できるからそれで分岐して最適なものをDL

でもそれぞれをデザイナに用意させるのは酷だ
でもUnityで設定できるフォーマットは一つ。どうしよう

アセットバンドルビルドサーバがGPUごとに存在
それぞれ適切なフォーマットに変更してアセットバンドル作り続ける
財力だ

ただ、テクスチャフォーマット変えるとUnityがキャッシュ作り直してそれで１日かかって死ぬ
なので、自前スクリプトで.metaを直接いじって最適なフォーマットに変更する

シェーダ問題
GPUがいっぱいあるとシェーダも分ける必要が有る
ぷりコンパイルができないため、起動時にコンパイルされる
shaderはshaderでまとめてパッケージにして、それを参照するようにしよう

おまけ
MoviusFF ユニティちゃんとコラボします

